---
title: "Disk Scheduling"
date: 2022-09-08
last_modified_at: 2022-09-08
categories: 
  - CS
tags:
  - [DiskScheduling]
---


![](https://media.vlpt.us/images/funnykyeon/post/b490deaf-64e2-4fe6-b367-f0172a224dad/image.png)

># 디스크 스케줄링이란?

## 1) 디스크 스케줄링의 개요    
  * ① 사용할 데이터가 디스크상의 여러 곳에 저장되어 있을 경우 데이터를 엑세스하기위해 디스크 헤드가 움직이는 경로를 결정하는 기법

  * ② 목적
    * 처리량(throughput)의 최대
    
    * 평균 응답 시간(response time)의 최소화
    
    * 응답 시간 편차의 최소화
  
## 2) FCFS 스케줄링

  * First Come First Served 즉, 큐에 가장먼저 요청이 온 순서대로 서비스한다.

  * 장점 : 알고리즘이 다른 기법보다 단순하며, 공평하게 요청을 처리한다.
 
  * 단점 : 비용이 많이 발생되어, 비효율적이다.  
  ![](https://media.vlpt.us/images/funnykyeon/post/45b9078b-04d2-4ad1-9e22-46f6cc2f450f/image.png)
  
 
## 3) SSTF(Shortest Seek Time First)
  * <span style="color:blue">현재 헤드에서 가장 가까운 트랙의 요청을 먼저 처리한다.</span> 즉 현재 헤드셋을 처리하고, 다음 요청 중에 이동거리가 가장 적은거리에 있는 트랙을 처리한다.
  
  * 장점 : Seek Time 이 적다. 즉 트랙을 찾는 시간을 최소화 할 수 있고, 처리량(Throughput)을 극대화 할 수 있다. 
 
  * 단점 : 안쪽 및 바깥쪽에 있는 요청들은 기아 현상이 발생할 수 있다. 도한, 응답 시간 편차가 크다.  
  ![](https://media.vlpt.us/images/funnykyeon/post/052279f6-ec1d-4c78-be23-ba6ec023cf09/image.png)
  
  
## 4) SCAN
  * <span style="color:blue">헤드셋의 진행방향에 있는 요청을 처리하고, 다시 반대 방향으로 틀어 반대방향에 있는 요청들을 처리한다.</span> 마치 엘레베이터가 동작하는 원리가 같아서 <span style="color:blue">엘레베이터 기법</span>이라고도 한다. 

 * 장점 : SSTF의 바깥쪽 트랙의 기아가능성을 제거할 수 있고, 응답시간의 편차를 줄일 수 있다.

 * 단점 : 양 쪽 끝 트랙 가운데 위치한 트랙보다 대기 시간이 길어진다. 엘레베이터로 비유하자면, 맨 꼭대기 층이 중간층보다 응답시간이 늦어질 수 있다는 뜻.  
![](https://media.vlpt.us/images/funnykyeon/post/b4816055-30f2-470b-83b8-5f12f24ec95d/image.png)

## 5) C-SCAN
  
 * <span style="color:blue">항상 한쪽 방향에서 반대방향으로 진행하며 트랙의 요청을 처리한다.</span> 즉 바깥쪽에서 안쪽으로 진행하며 요청을 처리한다. SCAN의 변형된 형태로 조금더 시간을 균등하게 배분할 수 있다.

 * 장점 : 응답시간의 편차가 매우 적음, SCAN보다 시간균등성이 좋음

 * 단점 : 안쪽이나, 바깥쪽으로 처리할 요청이 없어도 헤드셋이 끝까지 이동하기 때문에 비효율적 
![](https://media.vlpt.us/images/funnykyeon/post/cf3cfeec-9bee-48bf-8bdf-84bf20967cc5/image.png)

## 6) LOOK, C-LOOK

* LOOK 과 C-LOOK 은 SCAN과 C-SCAN을 보완하기 위한 스케쥴링 기법이다. SCAN과 C-SCAN의 비효율적인 부분은 위에 눈치채셨겠지만, <span style="color:blue">끝단에 요청이 없어도 끝단까지 도달하고야만다는 것이다. 따라서 요청이 진행방향에서 더이상 없다면, 끝단까지 가지않고</span> 반대방향으로 가던가(SCAN), 다시 같은 같은 방향으로 진행(C-SAN)하게 한다.

 * 장점 : 불필요한 헤드 이동시간을 제거

 * 단점 : 끝단까지 가야할지 말아야할지 판단하는데 있어서 오버헤드 발생  
 
 **LOOK (SCAN을 변형)**  
 ![](https://media.vlpt.us/images/funnykyeon/post/00e734d1-d630-4274-a18b-f8f4fd9cb4b2/image.png)
 
 **C-LOOK (C-SCAN을 변형)**  
![](https://media.vlpt.us/images/funnykyeon/post/3543342d-0dea-4813-912c-155e089eaa43/image.png)

## 7) N-STEP SCAN 

* N-STEP-SCAN 방법은 SCAN 기법을 기초로 두고 있으며, 시작하기 전 대기하고 있는 요청들을 우선적으로 처리하고, 처리하는 과정 중에 요청이 들어오는 것들은 이후에 모아서, 반대방향으로 진행할 때 서비스한다.

 * 장점 : SSTF, SCAN 보다 응답시간의 편차가 적음, 특정 방향에서의 많은 요청으로 인해 반대방향에 들어온 요청들에 대해 기아현상을 방지할 수 있음





## 8) 에션바흐(Eschenbach)기법

* 에션바흐 기업은 부하가 큰 항공시스템을 위해 개발되었고, 탐색시간 및 회전지연시간도 최적화 할 수 있는 기법이다. 


## 9) SLTF(Shortest Latency Time Fisrt) 기법

* 회전 지연 시간을 최적화 하기 위한 대표적인 기법이며, 디스크 헤드가 틀정 실린더에 도착하면 그 실더 내의 여러 트랙에 대한 요청을 검사한 후 회전 지연시간이 가장 짧은 요청부터 서비스 하는 기법

 * 헤드의 이동이 거의 없어, 고정 헤드 장치인 드럼에 사용